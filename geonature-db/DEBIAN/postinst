#!/bin/bash
# postinst script for geonature-db
#
# see: dh_installdeb(1)

set -e
# set -o xtrace

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see https://www.debian.org/doc/debian-policy/ or
# the debian-policy package
function get_var () {
    db_get geonature-db/POSTGRES_PORT
    export POSTGRES_PORT="$RET"
    db_get geonature-db/POSTGRES_USER
    export POSTGRES_USER="$RET"
    db_get geonature-db/POSTGRES_PASSWORD
    export POSTGRES_PASSWORD="$RET"
    export POSTGRES_HOST="localhost"
    db_get geonature-db/POSTGRES_DB
    export POSTGRES_DB="$RET"
    db_get geonature-db/POSTGRES_LOCALE
    export POSTGRES_LOCALE="$RET"
    db_get geonature-db/NOMENCLATURE_LANGUAGE
    export NOMENCLATURE_LANGUAGE="$RET"
    db_get geonature-db/LOCAL_SRID
    export LOCAL_SRID="$RET"
    db_get geonature-db/ADD_USERSHUB_SAMPLE_DATA
    export ADD_USERSHUB_SAMPLE_DATA="$RET"
    db_get geonature-db/REFGEO_MUNICIPALITY
    export REFGEO_MUNICIPALITY="$RET"
    db_get geonature-db/REFGEO_GRID
    export REFGEO_GRID="$RET"
    db_get geonature-db/REFGEO_DEM
    export REFGEO_DEM="$RET"
    db_get geonature-db/REFGEO_VECTORISE_DEM
    export REFGEO_VECTORISE_DEM="$RET"
    db_get geonature-db/SAMPLE_DATA
    export SAMPLE_DATA="$RET"
}
function generate_config () {
    # Generate config files
    get_var
    echo "Generate configuration" >&2
    CONF_DIR=/etc/geonature
    for f in "geonature-db.conf"; do
        envsubst <$CONF_DIR/$f.init >$CONF_DIR/$f
    done
}

. /usr/share/debconf/confmodule
. /usr/share/geonature/geonature-db/install_db_functions.sh

# Environnement settings
export SCRIPT_PATH=/usr/share/geonature/geonature-db/sql
export LOG_PATH=/var/log/geonature/geonature-db

# PG settings
if [ -f /usr/share/debconf/confmodule ]; then
    db_version 2.0
    db_input high geonature-db/POSTGRES_PORT || true
    db_input high geonature-db/POSTGRES_USER || true
    db_input high geonature-db/POSTGRES_PASSWORD || true
    db_go
fi
get_var

case "$1" in
configure)
    # Manage pg user
    set +e
    create_role
    ret=$?
    set -e
    if [[ ret -ne 0 ]]; then
        db_version 2.0
        db_input high geonature-db/CONTINUER || true
        db_go
        db_get geonature-db/CONTINUER
        if [[ "$RET" = "false" ]]; then
            echo "L'utilisateur choisi existait. Vous avez choisi d'interrompre l'installation de la base de données."
            exit 1
        fi
    fi

    # Manage database
    if [ -f /usr/share/debconf/confmodule ]; then
        db_version 2.0
        db_input high geonature-db/POSTGRES_DB || true
        db_input high geonature-db/POSTGRES_LOCALE || true
        db_go
    fi
    get_var

    # Test if database exist
    if ! database_exists ${POSTGRES_DB}; then
        # Database doesn't exit --> create it
        if [ -f /usr/share/debconf/confmodule ]; then
            db_version 2.0
            db_input high geonature-db/NOMENCLATURE_LANGUAGE || true
            db_input high geonature-db/LOCAL_SRID || true
            db_input high geonature-db/ADD_USERSHUB_SAMPLE_DATA || true
            db_input high geonature-db/REFGEO_MUNICIPALITY || true
            db_input high geonature-db/REFGEO_GRID || true
            db_input high geonature-db/REFGEO_DEM || true
            db_input high geonature-db/REFGEO_VECTORISE_DEM || true
            db_input high geonature-db/SAMPLE_DATA || true
            db_go
        fi
        get_var
        create_database
        generate_config
    else
        # Database existe
        set +e
        # Try to read geonature version
        RESULT=(`export PGPASSWORD=$POSTGRES_PASSWORD;psql -t -h $POSTGRES_HOST -U $POSTGRES_USER -d $POSTGRES_DB -c "SELECT soft_installed_version FROM gn_commons.t_soft_versions WHERE soft_code = 'GN';"`)
        if [[ -z ${RESULT[0]}  ]]
            then
            # Nothing to read or connexion failure
            echo "La base de données existe mais les paramètres de connexion ne sont pas valides."
            echo "Le script d'installation de la base ne peut pas poursuivre. La base de données existante a été conservée."
            echo "Pour que le script d'installation fonctionne, vous devez fournir un autre nom pour la base de données GeoNature ainsi que des paramètres de connexion valides."
            exit 1
        else
            # Connexion is ok ! Version number is available
            echo "La base de données ${POSTGRES_DB} existe et ne sera pas supprimée. Sa version 'GeoNature' est ${RESULT[0]}."
            generate_config
            echo "Les paramètres de connexion à la base de données '${POSTGRES_DB}' ont été enregistrés dans '/etc/geonature/geonature-db.conf."
            echo "Ils seront utilisables par les applications GeoNature, UsersHub, TaxHub."
            echo "Assurez vous que ces applications sont compatibles avec la version de la base de données."
            exit 0       
        fi
        set -e       
        exit 0
    fi

    ;;

abort-upgrade | abort-remove | abort-deconfigure) ;;

*)
    echo "postinst called with unknown argument \`$1'" >&2
    exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
