#!/bin/bash
# postinst script for usershub
#
# see: dh_installdeb(1)

set -e
# set -o xtrace

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see https://www.debian.org/doc/debian-policy/ or
# the debian-policy package

. /usr/share/debconf/confmodule

# Generate config files
function generate_config() {
    echo "Generate configuration" >&2

    . /usr/share/debconf/confmodule

    if [ -f /usr/share/debconf/confmodule ]; then
        db_version 2.0
        db_input high usershub/URL_APPLICATION || true
        db_input low usershub/PASS_METHOD || true
        db_input low usershub/FILL_MD5_PASS || true
        db_input low usershub/COOKIE_EXPIRATION || true
        db_input low usershub/ACTIVATE_API || true
        db_input low usershub/ACTIVATE_APP || true
        db_go
    fi

    for p in URL_APPLICATION PASS_METHOD FILL_MD5_PASS COOKIE_EXPIRATION ACTIVATE_API ACTIVATE_APP; do
        db_get usershub/${p}
        export ${p}="$RET"
    done

    SECRET_KEY="$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 64 | head -n 1)"
    export SECRET_KEY

    CONF_DIR=/etc/geonature
    CONF_DIR=/tmp
    for f in "usershub.conf"; do
        envsubst <$CONF_DIR/$f.in >/tmp/$f
        mv /tmp/$f /etc/geonature/$f
    done
}

#  Installation du venv
function setup_venv() {
    rm -rf /usr/share/usershub/venv
    python3 -m venv /usr/share/usershub/venv
    /usr/share/usershub/venv/bin/pip install -r /usr/share/usershub/requirements.txt
}

# Reload supervisor
function reload_supervisor() {
    if [ -f /etc/init.d/supervisor ]; then
        if which invoke-rc.d >/dev/null; then
            if invoke-rc.d supervisor status >/dev/null 2>&1; then
                invoke-rc.d supervisor reload 3>/dev/null || true
            fi
        else
            if /etc/init.d/supervisor status >/dev/null 2>&1; then
                /etc/init.d/supervisor reload 3>/dev/null || true
            fi
        fi
    fi
}

case "$1" in
configure)
    # Test if config file already exists
    #   Si fichier de configuration existe
    #       alors on ne regénère pas la configuration
    db_get usershub/CONF_EXISTS
    export CONF_EXISTS="$RET"
    if [[ $CONF_EXISTS = 'true' ]]; then
        echo "config file already exists" >&2
    else
        generate_config
        db_set usershub/CONF_EXISTS true
    fi

    setup_venv
    reload_supervisor
    echo "configure done"

    ;;
triggered)
    for trigger in $2; do
        case "$trigger" in
        /usr/bin/python?.*)
            setup_venv
            ;;
        *)
            #echo >&2 "ERROR:" $(basename "$0") "called with unknown trigger '$2'"
            #exit 1
            ;;
        esac
    done
    ;;

abort-upgrade | abort-remove | abort-deconfigure) ;;

*)
    echo "postinst called with unknown argument \`$1'" >&2
    exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
