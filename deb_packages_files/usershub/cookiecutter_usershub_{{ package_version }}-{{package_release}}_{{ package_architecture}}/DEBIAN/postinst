#!/bin/bash
# postinst script for usershub
#
# see: dh_installdeb(1)

set -e
set -o xtrace

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see https://www.debian.org/doc/debian-policy/ or
# the debian-policy package

. /usr/share/debconf/confmodule

# Generate config files
function generate_config() {
    echo "Generate configuration" >&2
    for p in URL_APPLICATION PASS_METHOD FILL_MD5_PASS COOKIE_EXPIRATION ACTIVATE_API ACTIVATE_APP SECRET_KEY; do
        db_get usershub/${p}
        export ${p}="$RET"
    done

    CONF_DIR=/etc/geonature
    for f in "usershub.conf"; do
        envsubst <$CONF_DIR/$f >/tmp/$f
        mv /tmp/$f $CONF_DIR/$f
    done
}

#  Installation du venv
function setup_venv() {
    rm -rf /usr/share/usershub/venv
    python3 -m venv /usr/share/usershub/venv
    /usr/share/usershub/venv/bin/pip install -r /usr/share/usershub/requirements.txt
}

# Reload supervisor
function reload_supervisor() {
    if [ -f /etc/init.d/supervisor ]; then
        if which invoke-rc.d >/dev/null; then
            if invoke-rc.d supervisor status >/dev/null 2>&1; then
                invoke-rc.d supervisor reload 3>/dev/null || true
            fi
        else
            if /etc/init.d/supervisor status >/dev/null 2>&1; then
                /etc/init.d/supervisor reload 3>/dev/null || true
            fi
        fi
    fi
}

case "$1" in
configure)
    generate_config
    setup_venv
    reload_supervisor
    echo "configure done"

    ;;
triggered)
    for trigger in $2; do
        case "$trigger" in
        /usr/bin/python?.*)
            setup_venv
            ;;
        *)
            #echo >&2 "ERROR:" $(basename "$0") "called with unknown trigger '$2'"
            #exit 1
            ;;
        esac
    done
    ;;

abort-upgrade | abort-remove | abort-deconfigure) ;;

*)
    echo "postinst called with unknown argument \`$1'" >&2
    exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
